[{"/home/kunal/workspace/shoppingSite/frontend/src/index.js":"1","/home/kunal/workspace/shoppingSite/frontend/src/reportWebVitals.js":"2","/home/kunal/workspace/shoppingSite/frontend/src/App.js":"3","/home/kunal/workspace/shoppingSite/frontend/src/components/Header.js":"4","/home/kunal/workspace/shoppingSite/frontend/src/components/Footer.js":"5","/home/kunal/workspace/shoppingSite/frontend/src/screens/HomeScreen.js":"6","/home/kunal/workspace/shoppingSite/frontend/src/products.js":"7","/home/kunal/workspace/shoppingSite/frontend/src/components/Product.js":"8","/home/kunal/workspace/shoppingSite/frontend/src/components/Rating.js":"9","/home/kunal/workspace/shoppingSite/frontend/src/screens/ProductScreen.js":"10","/home/kunal/workspace/shoppingSite/frontend/src/redux/store.js":"11","/home/kunal/workspace/shoppingSite/frontend/src/redux/reducers/productReducers.js":"12","/home/kunal/workspace/shoppingSite/frontend/src/redux/types.js":"13","/home/kunal/workspace/shoppingSite/frontend/src/redux/actions/productActions.js":"14","/home/kunal/workspace/shoppingSite/frontend/src/components/Loader.js":"15","/home/kunal/workspace/shoppingSite/frontend/src/components/Message.js":"16","/home/kunal/workspace/shoppingSite/frontend/src/screens/CartScreen.js":"17","/home/kunal/workspace/shoppingSite/frontend/src/redux/reducers/cartReducers.js":"18","/home/kunal/workspace/shoppingSite/frontend/src/redux/actions/cartActions.js":"19","/home/kunal/workspace/shoppingSite/frontend/src/redux/reducers/userReducers.js":"20","/home/kunal/workspace/shoppingSite/frontend/src/screens/LoginScreen.js":"21","/home/kunal/workspace/shoppingSite/frontend/src/redux/actions/userActions.js":"22","/home/kunal/workspace/shoppingSite/frontend/src/components/FormContainer.js":"23","/home/kunal/workspace/shoppingSite/frontend/src/screens/RegisterScreen.js":"24","/home/kunal/workspace/shoppingSite/frontend/src/screens/ProfileScreens.js":"25","/home/kunal/workspace/shoppingSite/frontend/src/screens/ShippingScreen.js":"26","/home/kunal/workspace/shoppingSite/frontend/src/components/CheckoutSteps.js":"27","/home/kunal/workspace/shoppingSite/frontend/src/screens/PaymentScreen.js":"28","/home/kunal/workspace/shoppingSite/frontend/src/screens/PlaceOrderScreen.js":"29","/home/kunal/workspace/shoppingSite/frontend/src/redux/reducers/orderReducers.js":"30","/home/kunal/workspace/shoppingSite/frontend/src/redux/actions/orderActions.js":"31","/home/kunal/workspace/shoppingSite/frontend/src/screens/OrderScreen.js":"32"},{"size":593,"mtime":1610624378227,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1610559437843,"results":"35","hashOfConfig":"34"},{"size":1529,"mtime":1610729207231,"results":"36","hashOfConfig":"34"},{"size":1806,"mtime":1610636274315,"results":"37","hashOfConfig":"34"},{"size":102,"mtime":1610560074743,"results":"38","hashOfConfig":"34"},{"size":1067,"mtime":1610626074343,"results":"39","hashOfConfig":"34"},{"size":2486,"mtime":1610618955663,"results":"40","hashOfConfig":"34"},{"size":858,"mtime":1610569391579,"results":"41","hashOfConfig":"34"},{"size":1547,"mtime":1610569388415,"results":"42","hashOfConfig":"34"},{"size":3296,"mtime":1610630630631,"results":"43","hashOfConfig":"34"},{"size":1821,"mtime":1610731848075,"results":"44","hashOfConfig":"34"},{"size":866,"mtime":1610626379751,"results":"45","hashOfConfig":"34"},{"size":1880,"mtime":1610731734167,"results":"46","hashOfConfig":"34"},{"size":1000,"mtime":1610626514291,"results":"47","hashOfConfig":"34"},{"size":428,"mtime":1610625920115,"results":"48","hashOfConfig":"34"},{"size":273,"mtime":1610625920271,"results":"49","hashOfConfig":"34"},{"size":3159,"mtime":1610630540399,"results":"50","hashOfConfig":"34"},{"size":1016,"mtime":1610720894255,"results":"51","hashOfConfig":"34"},{"size":1156,"mtime":1610720709835,"results":"52","hashOfConfig":"34"},{"size":1730,"mtime":1610713867715,"results":"53","hashOfConfig":"34"},{"size":2122,"mtime":1610638626731,"results":"54","hashOfConfig":"34"},{"size":3085,"mtime":1610713959603,"results":"55","hashOfConfig":"34"},{"size":331,"mtime":1610625920407,"results":"56","hashOfConfig":"34"},{"size":3021,"mtime":1610638042831,"results":"57","hashOfConfig":"34"},{"size":3357,"mtime":1610714254147,"results":"58","hashOfConfig":"34"},{"size":2481,"mtime":1610729902599,"results":"59","hashOfConfig":"34"},{"size":1240,"mtime":1610625920495,"results":"60","hashOfConfig":"34"},{"size":1502,"mtime":1610721197155,"results":"61","hashOfConfig":"34"},{"size":4659,"mtime":1610730485335,"results":"62","hashOfConfig":"34"},{"size":1267,"mtime":1610731818131,"results":"63","hashOfConfig":"34"},{"size":2108,"mtime":1610732077307,"results":"64","hashOfConfig":"34"},{"size":5954,"mtime":1610978925635,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"ysfkpe",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kunal/workspace/shoppingSite/frontend/src/index.js",[],["136","137"],"/home/kunal/workspace/shoppingSite/frontend/src/reportWebVitals.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/App.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/components/Header.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/components/Footer.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/screens/HomeScreen.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/products.js",[],["138","139"],"/home/kunal/workspace/shoppingSite/frontend/src/components/Product.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/components/Rating.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/screens/ProductScreen.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/redux/store.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/redux/reducers/productReducers.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/redux/types.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/redux/actions/productActions.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/components/Loader.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/components/Message.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/screens/CartScreen.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/redux/reducers/cartReducers.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/redux/actions/cartActions.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/redux/reducers/userReducers.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/screens/LoginScreen.js",["140"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport { login, getUserDetail } from '../redux/actions/userActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo, loading, error } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n  // console.log(location)\n\n  useEffect(() => {\n    if (userInfo) history.push(redirect)\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New User?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : `/register`}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","/home/kunal/workspace/shoppingSite/frontend/src/redux/actions/userActions.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/components/FormContainer.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/screens/RegisterScreen.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/screens/ProfileScreens.js",["141"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getUserDetails, updateUserProfile } from '../redux/actions/userActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, user, error } = userDetails\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user.name) {\n        dispatch(getUserDetails('profile'))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [history, userInfo, user, dispatch, error])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) setMessage('Passwords do not match')\n    else dispatch(updateUserProfile({ id: user._id, name, email, password }))\n  }\n\n  const renderUpdateForm = () => (\n    <>\n      <h2>User Profile</h2>\n      {message && <Message>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {success && (\n        <Message variant='success'>Profile Updated Succesfully</Message>\n      )}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>User Profile</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Update\n        </Button>\n      </Form>\n    </>\n  )\n\n  return (\n    <Row>\n      <Col md={3}>{renderUpdateForm()}</Col>\n      <Col md={9}>\n        <h2>My orders</h2>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","/home/kunal/workspace/shoppingSite/frontend/src/screens/ShippingScreen.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/components/CheckoutSteps.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/screens/PaymentScreen.js",["142"],"import React, { useState, useEffect } from 'react'\nimport { Button, Form, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../redux/actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress) history.push('/shipping')\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1 className='my-3'>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='paymentMethod'>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            />\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","/home/kunal/workspace/shoppingSite/frontend/src/screens/PlaceOrderScreen.js",["143","144"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Item, Card, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport Message from '../components/Message'\nimport { createOrder } from '../redux/actions/orderActions'\nimport { Link } from 'react-router-dom'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n  const cart = useSelector((state) => state.cart)\n  const { cartItems, shippingAddress, paymentMethod } = cart\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  const make2Decimals = (num) => Number(Math.round(num * 100) / 100).toFixed(2)\n\n  cart.itemsPrice = make2Decimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n\n  cart.shippingPrice = make2Decimals(25.0)\n\n  cart.taxPrice = make2Decimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n\n  cart.totalPrice = make2Decimals(\n    Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)\n  )\n\n  useEffect(() => {\n    if (success) history.push(`/order/${order._id}`)\n  }, [history, success, order])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        taxPrice: cart.taxPrice,\n        shippingPrice: cart.shippingPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  const renderOrderItems = () => (\n    <ListGroup variant='flush'>\n      {cartItems.map((item, idx) => (\n        <ListGroup.Item key={idx}>\n          <Row>\n            <Col md={1}>\n              <Image src={item.image} alt={item.name} fluid rounded />\n            </Col>\n            <Col>\n              <Link to={`/products/${item.product}`}>{item.name}</Link>\n            </Col>\n            <Col md={4}>\n              {item.qty} x ${item.price} = ${item.qty * item.price}\n            </Col>\n          </Row>\n        </ListGroup.Item>\n      ))}\n    </ListGroup>\n  )\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address: </strong> {shippingAddress.address},{' '}\n                {shippingAddress.city}, {shippingAddress.postalCode},{' '}\n                {shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>payment method</h2>\n              <strong>Method: </strong> {paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cartItems.length === 0 ? (\n                <Message>Your Cart Is Empty</Message>\n              ) : (\n                renderOrderItems()\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <ListGroup>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items Price</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping Price</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax Price</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total Price</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n              {error && (\n                <ListGroup.Item>\n                  <Message variant='danger'>{error}</Message>\n                </ListGroup.Item>\n              )}\n\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cartItems.length === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","/home/kunal/workspace/shoppingSite/frontend/src/redux/reducers/orderReducers.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/redux/actions/orderActions.js",[],"/home/kunal/workspace/shoppingSite/frontend/src/screens/OrderScreen.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"145","replacedBy":"149"},{"ruleId":"147","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":6,"column":17,"nodeType":"153","messageId":"154","endLine":6,"endColumn":30},{"ruleId":"151","severity":1,"message":"155","line":2,"column":10,"nodeType":"153","messageId":"154","endLine":2,"endColumn":14},{"ruleId":"151","severity":1,"message":"156","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"157","line":1,"column":17,"nodeType":"153","messageId":"154","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"158","line":2,"column":39,"nodeType":"153","messageId":"154","endLine":2,"endColumn":43},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],"no-unused-vars","'getUserDetail' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Item' is defined but never used.","no-global-assign","no-unsafe-negation"]